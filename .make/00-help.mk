# See ../makefile

# If you're using GNU make and you need help debugging a makefile then there
# is a single line your should add. And it's so useful that you should add it
# to every makefile you create.
# cfr. http://blog.jgc.org/2015/04/the-one-line-you-should-add-to-every.html
print-%: ; @echo $*=$($*)


# switch from default /bin/sh to
SHELL := /bin/bash


# See https://stackoverflow.com/questions/19456518/error-when-using-sed-with-find-command-on-os-x-invalid-command-code
# By default MacOS does not use GNU Sed, but a different less-compatible sed-implemenation that
# easily triggers following error: 'invalid command code'.
# You need to install GNU Sed via 'brew install gnu-sed' to make the 'gsed'-command available on $PATH.
# In our makesfiles, use gsed if found, otherwise regular sed.
SED=`command -v gsed || command -v sed`


# Set default goal to not be dependent on sorting / ordering.
.DEFAULT_GOAL := help  # defined in .make/00-help.mk


.PHONY: help
help:
	@echo -e "\nThis help is autogenerated by taking the inline-comments (starting with double ##) from the .PHONY-lines"
	@echo -e "Please use \`make <target>' where <target> is one of:\n"
	@grep -E '^\.PHONY: [a-zA-Z_-]+ .*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = "(: |##)"}; {printf "\033[36m%-30s\033[0m %s\n", $$2, $$3}'
