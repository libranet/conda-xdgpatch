# This is a comment.
# syntax-documentation:
#  - https://python-poetry.org/docs/pyproject
#  - https://flit.readthedocs.io/en/latest/pyproject_toml.html
#
# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[build-system]
# requires = ["poetry>=1.1", "poetry-dynamic-versioning"]
# build-backend = "poetry.masonry.api"
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"



[tool.black]
line-length = 120
target_version = ["py310"]
include = '\.py$'          # regex -> single-quotes


[tool.coverage.html]
directory = "var/coverage/html" # relative to $CWD

[tool.coverage.xml]
output = "var/coverage/coverage.xml" # relative to $CWD


[tool.coverage.report]
# cfr. https://coverage.readthedocs.io/en/coverage-4.2/excluding.html
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
include = ["src/*"]

[tool.coverage.run]
branch = true
data_file = "var/coverage/coverage.db" # defaults to .coverage


[tool.flake8]
max_line_length = 140
exclude = "bindings"
# F401: imported but unused
per_file_ignores = ["__init__.py:F401"]


[tool.isort]
line_length = 120             # corresponds to -w  flag
multi_line_output = 3         # corresponds to -m  flag
include_trailing_comma = true # corresponds to -tc flag
skip_glob = '^((?!py$).)*$'   # isort all Python files
known_third_party = []


[tool.mypy]
# cfr https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
cache_dir = "var/cache/mypy"
check_untyped_defs = true
# disallow_untyped_defs = true
exclude = "^bin/"
ignore_missing_imports = true
# mypy_path = ["./src", "./tests"]


[tool.poetry]
name = "conda_xdgpatch"
version = "0.0.0" # version managed by poetry-dynamic-versioning
description = " python-package"
readme = "docs/readme.rst"
authors = ["Wouter Vanden Hove <wouter@libranet.eu>"]
maintainers = ["Wouter Vanden Hove <wouter@libranet.eu>"]
repository = "https://github.com/libranet/conda_xdgpatch"
documentation = "https://github.com/libranet/conda_xdgpatch"
keywords = ["conda", "xdg", "sitecustomize"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: Commercial",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Typing :: Typed",
]

packages = [{ include = "conda_xdgpatch", from = "src" }]


[tool.poetry.dependencies]
# These packages are mandatory and form the core of this packageâ€™s distribution.
python = ">=3.9.0"
sitecustomize-entrypoints=">=0.1.0"

[tool.poetry.group.dev.dependencies]
black = { version = "^22.1.0", optional = true, allow-prereleases = true }
flake8 = ">=4.0.1"
flake8-pyproject = ">=1.2.2"
isort = ">=5.10.1"
mypy = ">=0.931"
pytest = ">=7.0.1"
pytest-cov = ">=3.0.0"
pre-commit = ">=2.14.1"
pre-commit-hooks = ">=4.1.0"
pylint = ">=2.12.2"

[tool.poetry.group.docs.dependencies]
Sphinx = ">=4.4.0"
sphinx-rtd-theme = ">=1.0.0"
recommonmark = ">=0.7.1"
sphinx-autoapi = ">=1.8.4"
autoapi = ">=2.0.1"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/Libranet/conda_xdgpatch/issues"


[tool.poetry-dynamic-versioning]
# cfr https://github.com/mtkennerly/poetry-dynamic-versioning
enable = true
vcs = "git"
style = "semver"

[tool.poetry-dynamic-versioning.substitution]
files = ["src/*/__init__.py", "src/*/__version__.py", "docs/changes.rst"]



[tool.poetry.plugins] # Optional super table

[tool.poetry.plugins."sitecustomize"]
# https://python-poetry.org/docs/pyproject/#plugins
# https://github.com/Darsstar/sitecustomize-entrypoints/blob/main/src/sitecustomize/__init__.py
libranet_conda_patch = "conda_xdgpatch.patch:patch"


[tool.poetry2conda]
# https://pypi.org/project/poetry2conda/
# https://levelup.gitconnected.com/publishing-your-python-package-on-conda-and-conda-forge-309a405740cf
name = "conda-base"


[tool.pylint.format]
max-line-length = 120
good-names = [
    "i",  # counter in loop
    "ok", # status
    "ts", # timestamp or timeseries object
]

[tool.pylint.messages_control]
disable = [
    "C0116", # missing-function-docstring
]

[tool.pytest.ini_options]
cache_dir = "var/cache/pytest"
log_cli = false                   # enable to show log-output
log_cli_level = "NOTSET"
filterwarnings = []
markers = ["unit", "integration"]
testpaths = ["tests"]

# the junit-report is used to report coverage in gitlab
addopts = "--junit-xml='var/coverage/pytest.xml'"
